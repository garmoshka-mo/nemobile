"use strict";angular.module("angular-gestures",[]);var HGESTURES={hmDoubleTap:"doubletap",hmDragstart:"panstart",hmDrag:"pan",hmDragUp:"panup",hmDragDown:"pandown",hmDragLeft:"panleft",hmDragRight:"panright",hmDragend:"panend",hmPanstart:"panstart",hmPan:"pan",hmPanUp:"panup",hmPanDown:"pandown",hmPanLeft:"panleft",hmPanRight:"panright",hmPanend:"panend",hmHold:"press",hmPinch:"pinch",hmPinchIn:"pinchin",hmPinchOut:"pinchout",hmPress:"press",hmRelease:"release",hmRotate:"rotate",hmSwipe:"swipe",hmSwipeUp:"swipeup",hmSwipeDown:"swipedown",hmSwipeLeft:"swipeleft",hmSwipeRight:"swiperight",hmTap:"tap",hmTouch:"touch",hmTransformstart:"transformstart",hmTransform:"transform",hmTransformend:"transformend"},VERBOSE=!1;angular.forEach(HGESTURES,function(a,n){angular.module("angular-gestures").directive(n,["$parse","$log","$timeout","hammerDefaultOpts",function(e,r,t,h){return function(t,m,p){var o;h.touchAction="pan-x",p.$observe(n,function(s){var i=e(s),u=e(p[n+"Opts"])(t,{}),g=angular.copy(h);angular.extend(g,u),angular.isUndefined(m.hammertime)&&(m.hammer=new Hammer.Manager(m[0],g),t.$on("$destroy",function(){m.hammer.off(a),m.hammer.destroy()})),o=function(n){VERBOSE&&r.debug("angular-gestures: ",a,n);var e=function(){var a=i(t,{$event:n});"function"==typeof a&&a.call(t,n)};"$apply"===t.$root.$$phase||"$digest"===t.$root.$$phase?e():t.$apply(e)},m.hammer.on(a,o)})}}])}),angular.module("angular-gestures").provider("hammerDefaultOpts",function(){var a={};this.set=function(n){a=n},this.$get=function(){return a}});